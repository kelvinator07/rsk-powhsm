#!/bin/bash

echo -e "\e[36mHSM2 Distribution builder\e[0m"
echo

pushd $(dirname $0) > /dev/null
ROOT_DIR=$(pwd)
popd > /dev/null

if [[ $# -lt 1 ]]; then
    echo -e "\e[31mPlease specify the local HSM2 repository path:"
    echo -e "\e[91m$0 <hsm2_repo_root_path>\e[0m"
    exit 1
fi

REPO_DIR=$1
DEST_DIR=$ROOT_DIR/dist
FIRMWARE_DIR=$DEST_DIR/firmware
BIN_DIR=$DEST_DIR/bin
TOOLSBIN_DIR=$ROOT_DIR/tools/bin
MANAGERBIN_DIR=$ROOT_DIR/../federation_node/server/hsm2/bin

pushd $REPO_DIR > /dev/null

# GitHub Action checkout doesn't include tag information
if ! ${CI:-false}; then
    # Grab tag and confirm build
    TAG=$(git describe --tags 2> /dev/null)

    if [[ $? -ne 0 ]]; then
        echo -e "\e[31mThe directory '$REPO_DIR' doesn't contain a valid git repository."
        exit 1
    fi
fi

if [[ $# -lt 4 ]]; then
    echo -e "\e[32mPlease enter the checkpoint (e.g., 0x00f06dcff26ec8b4d373fbd53ee770e9348d9bd6a247ad4c86e82ceb3c2130ac):\e[93m"
    read CHECKPOINT

    echo -e "\e[32mPlease enter the minimum difficulty (e.g., 0x7c50933098):\e[93m"
    read DIFFICULTY

    echo -e "\e[32mPlease enter the network (e.g., testnet, mainnet):\e[93m"
    read NETWORK
    echo
    echo -e "\e[32mYou are about to generate a distribution build from \e[93m'$REPO_DIR'\e[32m on tag \e[93m'$TAG'\e[0m"
    echo -e "\e[32mwith checkpoint \e[93m$CHECKPOINT\e[32m, minimum difficulty \e[93m$DIFFICULTY\e[32m and network \e[93m$NETWORK\e[0m"
    echo -e "\e[93mAre you sure? (yes/no)\e[0m"
    read SURE

    if [[ "$SURE" != "yes" ]]; then
        echo -e "\e[31mUser aborted"
        exit 1
    fi
else
    CHECKPOINT=$2
    DIFFICULTY=$3
    NETWORK=$4
fi

rm -rf $DEST_DIR
./build-dist $DEST_DIR $CHECKPOINT $DIFFICULTY $NETWORK
mkdir -p $MANAGERBIN_DIR
mkdir -p $TOOLSBIN_DIR
mv -f $BIN_DIR/manager.tgz $MANAGERBIN_DIR/manager.tgz
cp -f $BIN_DIR/signapp.tgz $TOOLSBIN_DIR/signapp.tgz

rm $DEST_DIR/README.md
mv $DEST_DIR/README-cli.md $DEST_DIR/README.md

echo -e "\e[33mSetup files saved under \e[93m$DEST_DIR\e[0m"
echo -e "\e[33mManager binary saved under \e[93m$MANAGERBIN_DIR\e[0m"
echo -e "\e[33mFirmware signer binary saved under \e[93m$TOOLSBIN_DIR\e[0m"
echo -e "\e[36mPlease don't forget to sign the firmware located under \e[93m$FIRMWARE_DIR\e[0m"
echo -e "\e[32mBuild done.\e[0m"

popd > /dev/null
